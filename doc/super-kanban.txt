*super-kanban.txt* *super-kanban.nvim*                   Last change: 2025 June 26

------------------------------------------------------------------------------
                                                *super-kanban-table-of-contents*
TABLE OF CONTENTS

  1. Introduction ................................ |super-kanban-introduction|
    - Features .......................... |super-kanban-introduction-features|
  2. Installation ................................ |super-kanban-installation|
    - Requirements .................. |super-kanban-installation-requirements|
    - lazy.nvim ........................ |super-kanban-installation-lazy.nvim|
    - mini.deps ........................ |super-kanban-installation-mini.deps|
  3. Configuration ..................................... |super-kanban-config|
    - Mappings ................................ |super-kanban-config-mappings|
    - Default Options ......................... |super-kanban-config-defaults|
  4. API .................................................. |super-kanban-api|
  5. Commands ............................ |:SuperKanban| |super-kanban-command|
    - SuperKanban open ........................... |super-kanban-command-open|
    - SuperKanban create ....................... |super-kanban-command-create|
    - SuperKanban close ......................... |super-kanban-command-close|
    - SuperKanban list ........................... |super-kanban-command-list|
    - SuperKanban card ........................... |super-kanban-command-card|
  6. Actions .......................................... |super-kanban-actions|
  7. Highlight groups ........................ |super-kanban-highlight-groups|

------------------------------------------------------------------------------
                                                     *super-kanban-introduction*
1. Introduction ~

super-kanban.nvim is a fast, minimal, and keyboard-centric Kanban board plugin
for Neovim. It’s fully customizable and supports both Obsidian Kanban-style
Markdown and Org-mode formats, allowing you to manage tasks seamlessly within
your Neovim workflow.

------------------------------------------------------------------------------
                                            *super-kanban-introduction-features*
FEATURES

- Keyboard-centric Kanban workflow built for Neovim
- Treesitter-based parsing for `Markdown` and `Orgmode` (`neorg comming soon`)
- Compatible with obsidian-kanban style markdown
- Supports tags, checkmarks, due dates, and note links in cards
- Built-in date picker for assigning due dates and sorting or archiving cards
- Time tracking support to log and review time spent on each task (`comming soon`)

------------------------------------------------------------------------------
                                                     *super-kanban-installation*
2. Installation ~

------------------------------------------------------------------------------
                                        *super-kanban-installation-requirements*
REQUIREMENTS

- snacks.nvim https://github.com/folke/snacks.nvim
- Treesitter parser for 'markdown' or 'org'

OPTIONAL REQUIREMENTS

- orgmode.nvim https://github.com/nvim-orgmode/orgmode (for Org file support)
- flash.nvim https://github.com/folke/flash.nvim       (for jump navigation)

------------------------------------------------------------------------------
                                           *super-kanban-installation-lazy.nvim*
lazy.nvim ~
>lua
  {
    "hasansujon786/super-kanban.nvim",
    dependencies = {
      "folke/snacks.nvim",           -- [required]
      "nvim-orgmode/orgmode",        -- [optional] Org format support
    },
    opts = {}, -- optional: pass your config table here
  }
<

------------------------------------------------------------------------------
                                           *super-kanban-installation-mini.deps*
mini.deps ~
>lua
  require("mini.deps").add({
    source = "hasansujon786/super-kanban.nvim",
    depends = {
      { source = "folke/snacks.nvim" },       -- [required]
      { source = "nvim-orgmode/orgmode" },    -- [optional] Org format support
    },
  })
<

------------------------------------------------------------------------------
                                                           *super-kanban-config*
3. Configuration ~

Use `super-kanban.setup()` to configure the plugin and override default options.

Usage ~
>lua
  require('super-kanban').setup() -- use default configuration
  -- OR
  require('super-kanban').setup({ -- your custom options here
    markdown = {...},
    org = {...},
    card = {...}
    list = {...},
    board = {...},
    date_picker = {...},
    note_popup = {...},
    icons = {...},
    mappings = {...},
  })
<
See also ~
|super-kanban-config-defaults| for a full list of available options.

------------------------------------------------------------------------------
                                                  *super-kanban-config-mappings*
MAPPINGS

Customize key mappings via the `mappings` option in `setup()`. Each mapping can
be a `string` (name of a built-in action), a `table`, or `false` to disable it.

Usage ~
>lua
  require('super-kanban').setup({
    mappings = {
      -- Map 'g<cr>' to a built-in action by name
      ['g<cr>'] = 'open_note',

      -- Disable a default mapping
      ['<cr>'] = false,

      -- Map 's' to a custom function
      ['s'] = {
        callback = function()
          pick_window()
        end,
        desc = 'Flash',
      },

      -- Map '/' to a built-in action with custom behavior
      ['/'] = {
        callback = function(card, list, ctx)
          require('super-kanban.actions').search_card(card, list, ctx)
        end,
        nowait = true, -- optional
      },
    },
  })
<
Notes ~

- `callback`: a function that receives `(card, list, ctx)` if applicable.
- `desc`: shown in which-key or similar plugins (optional).
- `nowait`: prevent key timeout (optional).
- You can use all standard mapping options supported by `vim.keymap.set()`.
  See `:h vim.keymap.set()` and `vim.keymap.set.Opts` for details.

See also ~
|super-kanban-actions| for a full list of built-in actions.

------------------------------------------------------------------------------
                                                  *super-kanban-config-defaults*
DEFAULT OPTIONS
>lua
  ---@class Navbuddy.config
  {
    markdown = {
      -- Absolute or relative path where markdown note files are stored
      notes_dir = './.notes/',
      -- Markdown heading level used for lists (e.g. h2)
      list_heading = 'h2',
      -- Mark inserted when a list is marked complete
      list_auto_complete_mark = '**Complete**',
      -- String used to separate sections in the file
      section_separators = '***',
      -- Heading title for archived tasks
      archive_heading = 'Archive',
      -- Initial section headings for new boards
      default_template = {
        '## Backlog\n',
        '## Todo\n',
        '## Work in progress\n',
        '## Completed\n',
        '**Complete**',
      },
      -- Lines inserted at the top of the file
      header = {
        '---',
        '',
        'kanban-plugin: basic',
        '',
        '---',
        '',
      },
      -- Lines inserted at the bottom of the file
      footer = {
        '',
        '%% kanban:settings',
        '```',
        '{"kanban-plugin":"basic"}',
        '```',
        '%%',
      },
    },
    org = {
      -- Absolute or relative path where org note files are stored
      notes_dir = './.notes/',
      -- Org heading level used for lists (e.g. h2)
      list_heading = 'h2',
      -- Mark inserted when a list is marked complete
      list_auto_complete_mark = '*Complete*',
      -- String used to separate sections in the file
      section_separators = '-----',
      -- Heading title for archived tasks
      archive_heading = 'Archive',
      -- Initial section headings for new boards
      default_template = {
        '** Backlog\n',
        '** Todo\n',
        '** Work in progress\n',
        '** Completed\n',
        '*Complete*',
      },
      -- Lines inserted at the top of the file
      header = {},
      -- Lines inserted at the bottom of the file
      footer = {},
    },
    card = {
      -- Card window width (0 = auto)
      width = 32,
      -- Card window height in lines
      height = 6,
      -- Z-index layering of the card window
      zindex = 7,
      -- Card border characters (table of 8 sides)
      border = { '', '', '', '', '', '▁', '', '' }, -- Only add border at bottom
      -- Additional window-local options for the card
      win_options = {
        wrap = true,
        -- spell = true, -- Uncomment this to enable spell checking
      },
    },
    list = {
      -- Width of the list window (columns)
      width = 32,
      -- Height of the list window (0–1 = % of screen height)
      height = 0.9,
      -- Z-index layering of the list window
      zindex = 6,
      -- List window border characters
      -- border = { '', '', '', '│', '┘', '─', '└', '│' }, -- bottom single
      border = { '', '', '', '│', '╯', '─', '╰', '│' }, -- bottom rounded
      -- border = "rounded",
      -- Additional window-local options for the list
      win_options = {},
    },
    board = {
      -- Width of the board window (0 = full width)
      width = 0,
      -- Height of the board window
      height = vim.o.lines - 2,
      -- Z-index layering of the board
      zindex = 5,
      -- Board border characters (empty or filled)
      border = { '', ' ', '', '', '', '', '', '' }, -- Only add empty space on top border
      -- Additional window-local options for the board
      win_options = {},
      -- Padding around board content (top, left)
      padding = { top = 1, left = 8 },
    },
    date_picker = {
      -- Z-index for the date picker popup
      zindex = 10,
      -- Border style for the date picker (e.g. 'rounded')
      border = 'rounded',
      -- Additional window-local options
      win_options = {},
      -- Start of the week ('Sunday' or 'Monday')
      first_day_of_week = 'Sunday',
    },
    note_popup = {
      -- Width of the note popup (0–1 = % of screen width)
      width = 0.6,
      -- Height of the note popup (0–1 = % of screen height)
      height = 0.7,
      -- Z-index layering of the popup
      zindex = 8,
      -- Border style for the note popup window
      border = 'rounded',
      -- Additional window-local options
      win_options = {},
    },
    icons = {
      -- Character for left edge of a list
      list_edge_left = '', -- ║
      -- Character for right edge of a list
      list_edge_right = '', -- ║
      -- Left decorative separator for elements
      bubble_edge_left = '', -- 
      -- Right decorative separator for elements
      bubble_edge_right = '', -- 
      -- Arrows
      arrow_left = '←',
      arrow_right = '→',
      arrow_up = '↑',
      arrow_down = '↓',
      -- Symbols for checkbox states in cards
      card_checkmarks = {
        ['empty_box'] = '☐',
        [' '] = ' ',
        ['x'] = '✔',
      },
    },
    mappings = {
      -- Close board window
      ['q'] = 'close',
      -- Log card info
      ['X'] = 'log_info',

      -- Create card at various positions
      ['gn'] = 'create_card_before',
      ['gN'] = 'create_card_after',
      ['gK'] = 'create_card_top',
      ['gJ'] = 'create_card_bottom',

      -- Delete or archive Toggle card checkbox
      ['gD'] = 'delete_card',
      ['g<C-t>'] = 'archive_card',
      ['<C-t>'] = 'toggle_complete',

      -- Sort cards
      ['g.'] = 'sort_by_due_descending',
      ['g,'] = 'sort_by_due_ascending',

      -- Search cards
      ['/'] = 'search_card',
      -- Open date picker
      ['zi'] = 'pick_date',
      -- Open card note
      ['<cr>'] = 'open_note',

      -- List management
      ['zN'] = 'create_list_at_begin',
      ['zn'] = 'create_list_at_end',
      ['zD'] = 'delete_list',
      ['zr'] = 'rename_list',

      -- Navigation between cards/lists
      ['<C-k>'] = 'jump_up',
      ['<C-j>'] = 'jump_down',
      ['<C-h>'] = 'jump_left',
      ['<C-l>'] = 'jump_right',
      ['gg'] = 'jump_top',
      ['G'] = 'jump_bottom',
      ['z0'] = 'jump_list_begin',
      ['z$'] = 'jump_list_end',

      -- Move cards/lists
      ['<A-k>'] = 'move_up',
      ['<A-j>'] = 'move_down',
      ['<A-h>'] = 'move_left',
      ['<A-l>'] = 'move_right',
      ['zh'] = 'move_list_left',
      ['zl'] = 'move_list_right',
    },
  }
<
Class ~
{superkanban.Config}

------------------------------------------------------------------------------
                                                              *super-kanban-api*
4. API

The following functions are provided by |super-kanban.nvim|.

------------------------------------------------------------------------------
                                                                      *M.open()*
                            `M.open`({source_path})

Open super-kanban board.

Parameters ~
{source_path} `(string)` Absolute or relative path to the source_path

------------------------------------------------------------------------------
                                                                    *M.create()*
                           `M.create`({source_path})

Scaffold a Kanban file with default template.

Parameters ~
{source_path} `(string)` Absolute or relative path to the file used to
create the Kanban board.

------------------------------------------------------------------------------
                                                                     *M.setup()*
                              `M.setup`({config})

Setup super-kanban with optional user configuration.

Parameters ~
{config} `(optional)` `(superkanban.Config)` Override defaults.


==============================================================================
------------------------------------------------------------------------------
                                             *:SuperKanban* *super-kanban-command*
5. Commands ~

    :SuperKanban open                |super-kanban-command-open|
    :SuperKanban create              |super-kanban-command-create|
    :SuperKanban close               |super-kanban-command-close|
    :SuperKanban list                |super-kanban-command-list|
    :SuperKanban card                |super-kanban-command-card|

These commands are provided by |super-kanban.nvim| to control board behavior.
Read below for more details on subcommands and their functionality.

------------------------------------------------------------------------------
                                                     *super-kanban-command-open*
:SuperKanban [file] ~
:SuperKanban open [file] ~

    Open the main Kanban board window with the given file.

------------------------------------------------------------------------------
                                                   *super-kanban-command-create*
:SuperKanban create [file] ~

    Create a new board file.
    - If no argument is passed, prompts for a file. (TODO: work on this)
    - You may pass a relative or absolute path like `file.md` or `dir/file.md`.

------------------------------------------------------------------------------
                                                    *super-kanban-command-close*
:SuperKanban close ~

    Exit out the main Kanban board window

------------------------------------------------------------------------------
                                                     *super-kanban-command-list*
:SuperKanban list ~

    Perform list-related actions like creating, renaming, deleting,
    moving, or jumping between lists in the Kanban board.

Available subcommands: ~

create=[position]
  - `begin` : Create a list at the beginning of the board.
  - `end`   : Create a list at the end of the board.

rename
  Rename the currently selected list.

delete
  Delete the currently selected list.

move=[direction]
  - `left`  : Move the list one position to the left.
  - `right` : Move the list one position to the right.

jump=[direction]
  - `left`  : Jump focus to the list on the left.
  - `right` : Jump focus to the list on the right.
  - `begin` : Jump focus to the first list.
  - `end`   : Jump focus to the last list.

sort=[option]
  - `descending` : Sort cards in the list by due date (latest first).
  - `ascending`  : Sort cards in the list by due date (earliest first).

------------------------------------------------------------------------------
                                                     *super-kanban-command-card*
:SuperKanban card ~

    Perform card-related actions such as creating, moving, jumping,
    toggling completion, assigning due dates, and more.

Available subcommands: ~

create=[position]
  - `before` : Create a card before the current card.
  - `after`  : Create a card after the current card.
  - `top`    : Create a card at the top of the current list.
  - `bottom` : Create a card at the bottom of the current list.

delete
  Delete the currently selected card.

toggle_complete
  Toggle the completion status of the card.

archive
  Archive the currently selected card.

pick_date
  Open the date picker to assign a due date.

remove_date
  Remove the due date from the current card.

search
  Search for cards globally across the board.

open_note
  Open or create note file for current card.

move=[direction]
  - `up`     : Move the current card upward within the list.
  - `down`   : Move the current card downward within the list.
  - `left`   : Move the card to the previous list.
  - `right`  : Move the card to the next list.

jump=[direction]
  - `up`     : Jump focus to the card above.
  - `down`   : Jump focus to the card below.
  - `left`   : Jump to the previous list.
  - `right`  : Jump to the next list.
  - `top`    : Jump to the top of the current list.
  - `bottom` : Jump to the bottom of the current list.


==============================================================================
------------------------------------------------------------------------------
                                                          *super-kanban-actions*
6. Actions ~

Customize key mappings using the `mappings` option in setup().
Read below to find available built-in action names and their functionality.

------------------------------------------------------------------------------
                                                               *actions.close()*
                   `actions.close`({cardUI}, {listUI}, {ctx})

Open the main Kanban board window.

Parameters ~
{cardUI} `(vim.keymap.set.Opts)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                *actions.create_list_at_begin()*
           `actions.create_list_at_begin`({cardUI}, {listUI}, {ctx})

Create a list at the beginning of the board.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                  *actions.create_list_at_end()*
            `actions.create_list_at_end`({cardUI}, {listUI}, {ctx})

Create a list at the end of the board.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                         *actions.rename_list()*
                `actions.rename_list`({cardUI}, {listUI}, {ctx})

Rename the currently selected list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                         *actions.delete_list()*
                `actions.delete_list`({cardUI}, {listUI}, {ctx})

Delete the currently selected list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                      *actions.move_list_left()*
              `actions.move_list_left`({cardUI}, {listUI}, {ctx})

Move the list one position to the left.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                     *actions.move_list_right()*
              `actions.move_list_right`({cardUI}, {listUI}, {ctx})

Move the list one position to the right.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                      *actions.jump_list_left()*
              `actions.jump_list_left`({cardUI}, {listUI}, {ctx})

Jump focus to the list on the left.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                     *actions.jump_list_right()*
              `actions.jump_list_right`({cardUI}, {listUI}, {ctx})

Jump focus to the list on the right.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                     *actions.jump_list_begin()*
              `actions.jump_list_begin`({cardUI}, {listUI}, {ctx})

Jump focus to the first list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                       *actions.jump_list_end()*
               `actions.jump_list_end`({cardUI}, {listUI}, {ctx})

Jump focus to the last list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                              *actions.sort_by_due_descending()*
          `actions.sort_by_due_descending`({cardUI}, {listUI}, {ctx})

Sort cards in the list by due date (latest first).

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                               *actions.sort_by_due_ascending()*
           `actions.sort_by_due_ascending`({cardUI}, {listUI}, {ctx})

Sort cards in the list by due date (earliest first).

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                     *actions.create_card_top()*
              `actions.create_card_top`({cardUI}, {listUI}, {ctx})

Create a card at the top of the current list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                  *actions.create_card_bottom()*
            `actions.create_card_bottom`({cardUI}, {listUI}, {ctx})

Create a card at the bottom of the current list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                  *actions.create_card_before()*
            `actions.create_card_before`({cardUI}, {listUI}, {ctx})

Create a card before the current card.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                   *actions.create_card_after()*
             `actions.create_card_after`({cardUI}, {listUI}, {ctx})

Create a card after the current card.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                         *actions.delete_card()*
                `actions.delete_card`({cardUI}, {listUI}, {ctx})

Delete the currently selected card.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                     *actions.toggle_complete()*
              `actions.toggle_complete`({cardUI}, {listUI}, {ctx})

Toggle the completion status of the card.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                        *actions.archive_card()*
               `actions.archive_card`({cardUI}, {listUI}, {ctx})

Archive the currently selected card.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                           *actions.pick_date()*
                 `actions.pick_date`({cardUI}, {listUI}, {ctx})

Open the date picker to assign a due date.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                         *actions.remove_date()*
                `actions.remove_date`({cardUI}, {listUI}, {ctx})

Remove the due date from the current card.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                         *actions.search_card()*
                `actions.search_card`({cardUI}, {listUI}, {ctx})

Search for cards globally across the board.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                           *actions.open_note()*
                 `actions.open_note`({cardUI}, {listUI}, {ctx})

Open or create note file for current card

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                             *actions.move_up()*
                  `actions.move_up`({cardUI}, {listUI}, {ctx})

Move the current card upward within the list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                           *actions.move_down()*
                 `actions.move_down`({cardUI}, {listUI}, {ctx})

Move the current card downward within the list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                           *actions.move_left()*
                 `actions.move_left`({cardUI}, {listUI}, {ctx})

Move the card to the previous list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                          *actions.move_right()*
                `actions.move_right`({cardUI}, {listUI}, {ctx})

Move the card to the next list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                             *actions.jump_up()*
                  `actions.jump_up`({cardUI}, {listUI}, {ctx})

Jump focus to the card above.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                           *actions.jump_down()*
                 `actions.jump_down`({cardUI}, {listUI}, {ctx})

Jump focus to the card below.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                           *actions.jump_left()*
                 `actions.jump_left`({cardUI}, {listUI}, {ctx})

Jump to the previous list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                          *actions.jump_right()*
                `actions.jump_right`({cardUI}, {listUI}, {ctx})

Jump to the next list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                            *actions.jump_top()*
                 `actions.jump_top`({cardUI}, {listUI}, {ctx})

Jump to the top of the current list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`

------------------------------------------------------------------------------
                                                         *actions.jump_bottom()*
                `actions.jump_bottom`({cardUI}, {listUI}, {ctx})

Jump to the bottom of the current list.

Parameters ~
{cardUI} `(superkanban.cardUI|nil)`
{listUI} `(superkanban.ListUI|nil)`
{ctx} `(superkanban.Ctx)`


==============================================================================
------------------------------------------------------------------------------
                                                 *super-kanban-highlight-groups*
7. Highlight groups ~


General highlights ~

* `SuperKanbanNormal`                - Main plugin UI highlight
* `SuperKanbanBorder`                - Border of all windows
* `SuperKanbanWinbar`                - Winbar for all windows
* `SuperKanbanBubble`                  - Bubble/tab UI element
* `SuperKanbanBubbleEdge`              - Edge of Bubble/tab element

These are base highlight groups used throughout SuperKanban. Other specific
highlight groups (e.g. `SuperKanbanBoardNormal`, `SuperKanbanListNormal`,
`SuperKanbanCardNormal`) inherit from them.

Board window ~

* `SuperKanbanBoardNormal`           - Board window content
* `SuperKanbanBoardBorder`           - Border of board window
* `SuperKanbanBoardWinbar`           - Winbar of board window
* `SuperKanbanBoardFileName`         - Name of board file
* `SuperKanbanBoardFileNameEdge`     - Edge of file name field
* `SuperKanbanBoardScrollInfo`       - Scroll info display
* `SuperKanbanBoardScrollInfoEdge`   - Edge of scroll info

List window ~

* `SuperKanbanListNormal`            - List window content
* `SuperKanbanListBorder`            - Border of list window
* `SuperKanbanListWinbar`            - Winbar of list window
* `SuperKanbanListTitleBottom`       - Title label below list

Card window ~

* `SuperKanbanCardNormal`            - Card window content
* `SuperKanbanCardNormalNC`          - Card content (unfocused)
* `SuperKanbanCardBorder`            - Card window border
* `SuperKanbanCardBorderNC`          - Border (unfocused card)
* `SuperKanbanCardWinBar`            - Winbar of card window
* `SuperKanbanCardWinbarNC`          - Winbar (unfocused card)

Card content ~

* `SuperKanbanNone`                  - Empty or default content
* `SuperKanbanTag`                   - Tag inside a card
* `SuperKanbanDueDate`               - Due date field
* `SuperKanbanCheckMark`             - Checkbox (unchecked)
* `SuperKanbanCheckMarkDone`         - Checkbox (checked)
* `SuperKanbanLink`                  - Link text inside card
* `SuperKanbanLinkDelimiter`         - Link brackets/edges

Note window ~

* `SuperKanbanNoteNormal`            - Note window content
* `SuperKanbanNoteNormalNC`          - Note content (unfocused)
* `SuperKanbanNoteBorder`            - Border of note window
* `SuperKanbanNoteTitle`             - Note title text
* `SuperKanbanNoteTitleEdge`         - Edge of note title

Date Picker window ~

* `SuperKanbanDatePickerNormal`      - Date picker content
* `SuperKanbanDatePickerBorder`      - Date picker border
* `SuperKanbanDatePickerTitle`       - Date picker title
* `SuperKanbanDatePickerWeekDays`    - Weekday labels `(Su Mo Tu We Th Fr Sa)`
* `SuperKanbanDatePickerSeparator`   - Line between Weekday labels & dates
* `SuperKanbanDatePickerToday`       - Highlight for today
* `SuperKanbanDatePickerCursor`      - Highlighted cursor date


 vim:tw=78:ts=8:noet:ft=help:norl: